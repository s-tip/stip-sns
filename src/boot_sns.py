from django.apps import AppConfig
from django.core.management import call_command
try:
    from django.utils.translation import ugettext_lazy as _
except ImportError:
    from django.utils.translation import gettext_lazy as _

from stip.common.boot import is_skip_sequence
# from daemon.email.smtp import start_mail_thread
from ctirs.core.boot_rs import init_mongo


class StipSnsBoot(AppConfig):
    name = 'boot_sns'

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)
        StipSnsBoot.slack_web_client = None
        StipSnsBoot.slack_rtm_client = None
        StipSnsBoot.th = None
        return

    def ready(self):
        from ctirs.models import Region, Country, SNSConfig
        from feeds.mongo import init_attck_collection

        is_skip_sequnece = is_skip_sequence()
        if not is_skip_sequnece:
            print('>>> Start Auto Deploy')
            print('>>> Start collcect static --noinput')
            # collectstatic
            call_command('collectstatic', '--noinput')

            # makemigrations/migrate
            call_command('makemigrations')
            call_command('migrate')

            # loaddata (region)
            region_count = Region.objects.count()
            print('>>> region record count: ' + str(region_count))
            if region_count == 0:
                print('>>> Start loaddata region')
                call_command('loaddata', 'region')
                print('>>> region record count: ' + str(Region.objects.count()))
            else:
                print('>>> Skip loaddata region')

            # loaddata (country)
            country_count = Country.objects.count()
            print('>>> coutnry record count: ' + str(country_count))
            if country_count == 0:
                print('>>> Start loaddata country')
                call_command('loaddata', 'country')
                print('>>> coutnry record count: ' + str(Country.objects.count()))
            else:
                print('>>> Skip loaddata country')

            # loaddata (sns_config)
            sns_config_count = SNSConfig.objects.count()
            print('>>> sns_config record count: ' + str(sns_config_count))
            if sns_config_count == 0:
                print('>>> Start loaddata sns_config')
                call_command('loaddata', 'sns_config')
                print('>>> sns_config record count: ' + str(SNSConfig.objects.count()))
            else:
                print('>>> Skip loaddata sns_config')

        # ATTCK コレクションがない場合は起動時に取得し、攻撃者情報リストを取得する
        init_attck_collection()

        # smtp daemon 起動
        # start_mail_thread()

        # country/region の日本語対応
        self.convert_country_and_region_in_japanese()

        # slack WebSocket start
        from daemon.slack.receive import start_receive_slack_thread
        slack_web_client, slack_rtm_client, th = start_receive_slack_thread()
        StipSnsBoot.slack_web_client = slack_web_client
        StipSnsBoot.slack_rtm_client = slack_rtm_client
        StipSnsBoot.th = th

        init_mongo()
        return

    @classmethod
    def get_slack_web_client(cls):
        return StipSnsBoot.slack_web_client

    @classmethod
    def get_slack_rtm_client(cls):
        return StipSnsBoot.slack_rtm_client

    @classmethod
    def get_slack_thread(cls):
        return StipSnsBoot.th

    def convert_country_and_region_in_japanese(self):
        # 日本語化対象
        # 日本の都道府県
        _('Aichi')
        _('Akita')
        _('Aomori')
        _('Chiba')
        _('Ehime')
        _('Fukui')
        _('Fukuoka')
        _('Fukushima')
        _('Gifu')
        _('Gunma')
        _('Hiroshima')
        _('Hokkaido')
        _('Hyogo')
        _('Ibaraki')
        _('Ishikawa')
        _('Iwate')
        _('Kagawa')
        _('Kagoshima')
        _('Kanagawa')
        _('Kochi')
        _('Kumamoto')
        _('Kyoto')
        _('Mie')
        _('Miyagi')
        _('Miyazaki')
        _('Nagano')
        _('Nagasaki')
        _('Nara')
        _('Niigata')
        _('Oita')
        _('Okayama')
        _('Okinawa')
        _('Osaka')
        _('Saga')
        _('Saitama')
        _('Shiga')
        _('Shimane')
        _('Shizuoka')
        _('Tochigi')
        _('Tokushima')
        _('Tokyo')
        _('Tottori')
        _('Toyama')
        _('Wakayama')
        _('Yamagata')
        _('Yamaguchi')
        _('Yamanashi')

        # 国名
        _('Afghanistan')
        _('Åland Islands')
        _('Albania')
        _('Algeria')
        _('American Samoa')
        _('Andorra')
        _('Angola')
        _('Anguilla')
        _('Antarctica')
        _('Antigua and Barbuda')
        _('Argentina')
        _('Armenia')
        _('Aruba')
        _('Australia')
        _('Austria')
        _('Azerbaijan')
        _('Bahamas')
        _('Bahrain')
        _('Bangladesh')
        _('Barbados')
        _('Belarus')
        _('Belgium')
        _('Belize')
        _('Benin')
        _('Bermuda')
        _('Bhutan')
        _('Bolivia (Plurinational State of)')
        _('Bonaire, Sint Eustatius and Saba')
        _('Bosnia and Herzegovina')
        _('Botswana')
        _('Bouvet Island')
        _('Brazil')
        _('British Indian Ocean Territory')
        _('Brunei Darussalam')
        _('Bulgaria')
        _('Burkina Faso')
        _('Burundi')
        _('Cambodia')
        _('Cameroon')
        _('Canada')
        _('Cabo Verde')
        _('Cayman Islands')
        _('Central African Republic')
        _('Chad')
        _('Chile')
        _('China')
        _('Christmas Island')
        _('Cocos (Keeling) Islands')
        _('Colombia')
        _('Comoros')
        _('Congo')
        _('Congo (Democratic Republic of the)')
        _('Cook Islands')
        _('Costa Rica')
        _('Côte d\'Ivoire')
        _('Croatia')
        _('Cuba')
        _('Curaçao')
        _('Cyprus')
        _('Czech Republic')
        _('Denmark')
        _('Djibouti')
        _('Dominica')
        _('Dominican Republic')
        _('Ecuador')
        _('Egypt')
        _('El Salvador')
        _('Equatorial Guinea')
        _('Eritrea')
        _('Estonia')
        _('Ethiopia')
        _('Falkland Islands (Malvinas)')
        _('Faroe Islands')
        _('Fiji')
        _('Finland')
        _('France')
        _('French Guiana')
        _('French Polynesia')
        _('French Southern Territories')
        _('Gabon')
        _('Gambia')
        _('Georgia')
        _('Germany')
        _('Ghana')
        _('Gibraltar')
        _('Greece')
        _('Greenland')
        _('Grenada')
        _('Guadeloupe')
        _('Guam')
        _('Guatemala')
        _('Guernsey')
        _('Guinea')
        _('Guinea-Bissau')
        _('Guyana')
        _('Haiti')
        _('Heard Island and McDonald Islands')
        _('Holy See')
        _('Honduras')
        _('Hong Kong')
        _('Hungary')
        _('Iceland')
        _('India')
        _('Indonesia')
        _('Iran (Islamic Republic of)')
        _('Iraq')
        _('Ireland')
        _('Isle of Man')
        _('Israel')
        _('Italy')
        _('Jamaica')
        _('Japan')
        _('Jersey')
        _('Jordan')
        _('Kazakhstan')
        _('Kenya')
        _('Kiribati')
        _('Korea (Democratic People\'s Republic of)')
        _('Korea (Republic of)')
        _('Kuwait')
        _('Kyrgyzstan')
        _('Lao People\'s Democratic Republic')
        _('Latvia')
        _('Lebanon')
        _('Lesotho')
        _('Liberia')
        _('Libya')
        _('Liechtenstein')
        _('Lithuania')
        _('Luxembourg')
        _('Macao')
        _('Macedonia (the former Yugoslav Republic of)')
        _('Madagascar')
        _('Malawi')
        _('Malaysia')
        _('Maldives')
        _('Mali')
        _('Malta')
        _('Marshall Islands')
        _('Martinique')
        _('Mauritania')
        _('Mauritius')
        _('Mayotte')
        _('Mexico')
        _('Micronesia (Federated States of)')
        _('Moldova (Republic of)')
        _('Monaco')
        _('Mongolia')
        _('Montenegro')
        _('Montserrat')
        _('Morocco')
        _('Mozambique')
        _('Myanmar')
        _('Namibia')
        _('Nauru')
        _('Nepal')
        _('Netherlands')
        _('New Caledonia')
        _('New Zealand')
        _('Nicaragua')
        _('Niger')
        _('Nigeria')
        _('Niue')
        _('Norfolk Island')
        _('Northern Mariana Islands')
        _('Norway')
        _('Oman')
        _('Pakistan')
        _('Palau')
        _('Palestine, State of')
        _('Panama')
        _('Papua New Guinea')
        _('Paraguay')
        _('Peru')
        _('Philippines')
        _('Pitcairn')
        _('Poland')
        _('Portugal')
        _('Puerto Rico')
        _('Qatar')
        _('Réunion')
        _('Romania')
        _('Russian Federation')
        _('Rwanda')
        _('Saint Barthélemy')
        _('Saint Helena, Ascension and Tristan da Cunha')
        _('Saint Kitts and Nevis')
        _('Saint Lucia')
        _('Saint Martin (French part)')
        _('Saint Pierre and Miquelon')
        _('Saint Vincent and the Grenadines')
        _('Samoa')
        _('San Marino')
        _('Sao Tome and Principe')
        _('Saudi Arabia')
        _('Senegal')
        _('Serbia')
        _('Seychelles')
        _('Sierra Leone')
        _('Singapore')
        _('Sint Maarten (Dutch part)')
        _('Slovakia')
        _('Slovenia')
        _('Solomon Islands')
        _('Somalia')
        _('South Africa')
        _('South Georgia and the South Sandwich Islands')
        _('South Sudan')
        _('Spain')
        _('Sri Lanka')
        _('Sudan')
        _('Suriname')
        _('Svalbard and Jan Mayen')
        _('Swaziland')
        _('Sweden')
        _('Switzerland')
        _('Syrian Arab Republic')
        _('Taiwan, Province of China')
        _('Tajikistan')
        _('Tanzania, United Republic of')
        _('Thailand')
        _('Timor-Leste')
        _('Togo')
        _('Tokelau')
        _('Tonga')
        _('Trinidad and Tobago')
        _('Tunisia')
        _('Turkey')
        _('Turkmenistan')
        _('Turks and Caicos Islands')
        _('Tuvalu')
        _('Uganda')
        _('Ukraine')
        _('United Arab Emirates')
        _('United Kingdom of Great Britain and Northern Ireland')
        _('United States of America')
        _('United States Minor Outlying Islands')
        _('Uruguay')
        _('Uzbekistan')
        _('Vanuatu')
        _('Venezuela (Bolivarian Republic of)')
        _('Viet Nam')
        _('Virgin Islands (British)')
        _('Virgin Islands (U.S.)')
        _('Wallis and Futuna')
        _('Western Sahara')
        _('Yemen')
        _('Zambia')
        _('Zimbabwe')
